name: assemble
on:
  workflow_dispatch:
    branches:
      - master
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
env:
  PLUS_PROJECT_ROOT: ${{ github.workspace }}
jobs:
  build-task-runner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-task-runner-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-task-runner-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run apt-get
        run: |
          sudo ./builder/init/run-if-changed.sh ./builder/init/apt-get.sh
      - name: Set up toolchains
        run: |
          . ./builder/init/env.sh
          ./builder/init/run-if-changed.sh ./builder/init/init.sh
          ./builder/init/run-if-changed.sh ./builder/init/init.linux_x86.sh

      - name: Run build-task
        run: ./builder/call.sh build_task_runner

      - name: Upload plus-task
        uses: actions/upload-artifact@v2
        with:
          name: plus-task
          path: ./target/x86_64-unknown-linux-musl/debug/plus-task

  cargo-test:
    needs: build-task-runner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-cargo-test-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-cargo-test-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run apt-get
        run: |
          sudo ./builder/init/run-if-changed.sh ./builder/init/apt-get.sh
      - name: Set up toolchains
        run: |
          . ./builder/init/env.sh
          ./builder/init/run-if-changed.sh ./builder/init/init.sh
          ./builder/init/run-if-changed.sh ./builder/init/init.linux_x86.sh
          ./builder/init/run-if-changed.sh ./builder/init/tools.linux_x86.sh

      - name: Download plus-task
        uses: actions/download-artifact@v2
        with:
          name: plus-task

      - name: Run cargo fmt
        run: ./builder/call.sh cargo_fmt_check
      - name: Run cargo clippy
        run: ./builder/call.sh cargo_clippy
      - name: Run cargo test
        run: ./builder/call.sh cargo_test

  target-linux-x86:
    needs: cargo-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-target-linux-x86-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-target-linux-x86-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run apt-get
        run: |
          sudo ./builder/init/run-if-changed.sh ./builder/init/apt-get.sh
      - name: Set up toolchains
        run: |
          . ./builder/init/env.sh
          ./builder/init/run-if-changed.sh ./builder/init/init.sh
          ./builder/init/run-if-changed.sh ./builder/init/init.linux_x86.sh

      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'

      - name: Download plus-task
        uses: actions/download-artifact@v2
        with:
          name: plus-task

      - name: Assemble artifacts
        run: ./builder/call.sh assemble x86_64-unknown-linux-musl

      - name: Package artifacts
        run: |
          ./builder/call.sh task package-artifacts \
            --target=x86_64-unknown-linux-musl \
            --files='${{ steps.files.outputs.added_modified }}'

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: x86_64-unknown-linux-musl
          path: ./dist/release/x86_64-unknown-linux-musl

  target-linux-armv7:
    needs: cargo-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-target-linux-armv7-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-target-linux-armv7-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run apt-get
        run: |
          sudo ./builder/init/run-if-changed.sh ./builder/init/apt-get.sh
          sudo ./builder/init/run-if-changed.sh ./builder/init/apt-get.linux_armv7.sh
      - name: Set up toolchains
        run: |
          . ./builder/init/env.sh
          ./builder/init/run-if-changed.sh ./builder/init/init.sh
          ./builder/init/run-if-changed.sh ./builder/init/init.linux_armv7.sh

      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'

      - name: Download plus-task
        uses: actions/download-artifact@v2
        with:
          name: plus-task

      - name: Assemble artifacts
        run: ./builder/call.sh assemble armv7-unknown-linux-musleabihf

      - name: Package artifacts
        run: |
          ./builder/call.sh task package-artifacts \
            --target=armv7-unknown-linux-musleabihf \
            --files='${{ steps.files.outputs.added_modified }}'

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: armv7-unknown-linux-musleabihf
          path: ./dist/release/armv7-unknown-linux-musleabihf

  target-macos-x86:
    needs: cargo-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
            builder/osxcross
          key: ${{ runner.os }}-target-macos-x86-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-target-macos-x86-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run apt-get
        run: |
          sudo ./builder/init/run-if-changed.sh ./builder/init/apt-get.sh
          sudo ./builder/init/run-if-changed.sh ./builder/init/apt-get.macos_x86.sh

      - name: Set up toolchains
        run: |
          ./scripts/download_osxcross.sh
          . ./builder/init/env.sh
          . ./builder/init/env.macos_x86.sh
          ./builder/init/run-if-changed.sh ./builder/init/init.sh
          ./builder/init/run-if-changed.sh ./builder/init/init.macos_x86.sh

      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'

      - name: Download plus-task
        uses: actions/download-artifact@v2
        with:
          name: plus-task

      - name: Assemble artifacts
        run: |
          . ./builder/init/env.macos_x86.sh
          ./builder/call.sh assemble x86_64-apple-darwin

      - name: Package artifacts
        run: |
          ./builder/call.sh task package-artifacts \
            --target=x86_64-apple-darwin \
            --files='${{ steps.files.outputs.added_modified }}'

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: x86_64-apple-darwin
          path: ./dist/release/x86_64-apple-darwin

  release-libraries:
    needs:
      - target-linux-x86
      - target-linux-armv7
      - target-macos-x86
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run apt-get
        run: |
          sudo ./builder/init/run-if-changed.sh ./builder/init/apt-get.sh

      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'

      - name: Download plus-task
        uses: actions/download-artifact@v2
        with:
          name: plus-task

      - name: Set up commands for release phase
        run: |
          ./builder/init/run-if-changed.sh ./builder/init/release.linux_x86.sh

      - name: Release libraries --dry-run
        if: ${{ github.ref != 'refs/heads/master' }}
        run: |
          ./builder/call.sh task release-libs \
            --files='${{ steps.files.outputs.added_modified }}' \
            --git-user-name='github-actions[bot]' \
            --git-user-email='41898282+github-actions[bot]@users.noreply.github.com' \
            --dry-run
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Release libraries
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          ./builder/call.sh task release-libs \
            --files='${{ steps.files.outputs.added_modified }}' \
            --git-user-name='github-actions[bot]' \
            --git-user-email='41898282+github-actions[bot]@users.noreply.github.com'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  release-applications:
    needs:
      - release-libraries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run apt-get
        run: |
          sudo ./builder/init/run-if-changed.sh ./builder/init/apt-get.sh

      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'

      - name: Download plus-task
        uses: actions/download-artifact@v2
        with:
          name: plus-task

      - name: Set up commands for release phase
        run: |
          ./builder/init/run-if-changed.sh ./builder/init/release.linux_x86.sh

      - name: Release applications --dry-run
        if: ${{ github.ref != 'refs/heads/master' }}
        run: |
          ./builder/call.sh task release-apps \
            --files='${{ steps.files.outputs.added_modified }}' \
            --git-user-name='github-actions[bot]' \
            --git-user-email='41898282+github-actions[bot]@users.noreply.github.com' \
            --dry-run
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Release applications
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          ./builder/call.sh task release-apps \
            --files='${{ steps.files.outputs.added_modified }}' \
            --git-user-name='github-actions[bot]' \
            --git-user-email='41898282+github-actions[bot]@users.noreply.github.com'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
